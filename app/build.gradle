apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd HH:mm:dd')
    return formattedDate
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.example.retrofit.retrofitutils"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName APP_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }

        }

    }

    lintOptions {
        abortOnError false
    }

    flavorDimensions("default")

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }




    //修改生成的apk名字及输出文件夹
    applicationVariants.all {
        variant ->
            variant.outputs.each { output ->
                //新名字
                def newName
                //时间戳
                def timeNow
                //输出文件夹
                def outDirectory
                //是否为Jenkins打包，输出路径不同
                if ("true".equals(IS_JENKINS)) {
                    //Jenkins打包输出到服务器路径
                    timeNow = BUILD_TIME
                    //BUILD_PATH为服务器输出路径
                    outDirectory = output.outputFile.name

                    newName = 'RetrofitUtils-v' + APP_VERSION + '-' + variant.buildType.name + '.apk'
                } else {
                    //本机打包输出在本机路径
                    timeNow = getDate()
                    outDirectory = "./Desktop/apk"
                    if ('debug'.equals(variant.buildType.name)) {
                        newName = "RetrofitUtils-v${APP_VERSION}-debug.apk"
                    } else {
                        newName = 'RetrofitUtils-v' + APP_VERSION + '-'+ variant.buildType.name + '.apk'
                    }
                }
                output.outputFileName = new File(newName)
            }

            if (project.hasProperty('KEY_ALIAS') && project.hasProperty('STORE_FILE_PAHT') &&
                    project.hasProperty('STORE_PASSWORD') &&
                    project.hasProperty('KEY_PASSWORD')) {
                android.signingConfigs.release.keyAlias = KEY_ALIAS
                android.signingConfigs.release.storeFile = file(STORE_FILE_PATH)
                android.signingConfigs.release.storePassword = STORE_PASSWORD
                android.signingConfigs.release.keyPassword = KEY_PASSWORD
            } else {
                android.buildTypes.release.signingConfig = null
            }
    }


}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.0.2'
    compile 'com.android.support.constraint:constraint-layout:1.0.0'
    testCompile 'junit:junit:4.12'


    compile project(path: ':retrofitlibrary')


}
